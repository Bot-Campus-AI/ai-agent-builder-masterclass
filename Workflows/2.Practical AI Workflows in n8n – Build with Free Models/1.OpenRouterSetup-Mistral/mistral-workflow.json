{
  "name": "mistral-workflow",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -384,
        -32
      ],
      "id": "8e435d79-ef0c-4dc0-a121-676ad0316a98",
      "name": "When chat message received",
      "webhookId": "ef9b6d88-002b-4a78-9540-c9ad0d98595a"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant for BotCampus AI.\n\nAlways reply ONLY with JSON in this exact shape:\n{\"action\":\"send_to_slack\",\"content\":\"<message>\"}\n\nRules:\n- Start the content with \"Welcome\".\n- Do NOT include Slack user IDs, channel IDs, or placeholders like <@USERID>, <#SlackChannelID>, @USERID.\n- Output plain human-readable text only.\n- Never add extra metadata, mentions, or IDs.\n- No text outside JSON.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -48,
        -112
      ],
      "id": "06f62690-064e-469d-b8d6-45552c5f0ba5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "mistralai/mistral-tiny",
        "options": {
          "responseFormat": "json_object",
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -80,
        112
      ],
      "id": "f360cc84-072f-4789-9e27-dfca53729466",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "98lvk63RdiEVUlle",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $json.output ?? '';\nlet action = 'respond';\nlet content = raw;\ntry {\n  const o = JSON.parse(raw);\n  action = o.action || action;\n  content = o.content || content;\n} catch (e) {}\nreturn [{ action, content }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        304,
        -112
      ],
      "id": "75750cf0-3887-4e0e-8732-beba25a63977",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5f4e9b7-ed7b-4d2a-a2e8-e04b03db7a91",
              "leftValue": "={{ $json.action }}",
              "rightValue": "send_to_slack",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        512,
        -112
      ],
      "id": "612a6830-aef0-42d2-b810-e1763aea3428",
      "name": "If"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09FELXFR7E",
          "mode": "list",
          "cachedResultName": "alerts"
        },
        "text": "={{ $('Code').item.json.content }}",
        "otherOptions": {}
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [
        656,
        -192
      ],
      "id": "86ae568c-2573-4ac2-87b6-810b257504af",
      "name": "Send a message",
      "webhookId": "3a750f74-5a79-4595-9df3-49c9f127d875",
      "credentials": {
        "slackApi": {
          "id": "byScDh3yo2v0Mb9y",
          "name": "Slack account 5"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f374a89a-2e44-485b-bb81-88ca386b4c1b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "36ff5823de645247c409d00d5ed0aecd5c29499b9cb9437a651601e2b22aaceb"
  },
  "id": "7QgyXdSRNpKtmaGa",
  "tags": []
}